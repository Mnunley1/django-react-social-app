{"version":3,"sources":["logo.svg","lookup/components.js","posts/lookup.js","posts/buttons.js","profiles/components.js","posts/detail.js","posts/create.js","posts/feed.js","posts/list.js","posts/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiPostFeed","nextUrl","undefined","replace","apiPostList","username","ActionBtn","props","post","action","didPerformAction","likes","className","actionDisplay","display","handleBackendActionEvent","type","onClick","event","preventDefault","postId","id","apiPostAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentPost","parent","Post","isRepost","reposter","hideActions","didRepost","useState","actionPost","setActionPost","match","pathname","urlPostId","groups","postid","isDetail","handlePerformAction","newActionPost","content","PostCreate","textAreaRef","React","createRef","didPost","handleBackEndUpdate","alert","onSubmit","newVal","current","value","ref","required","FeedList","postsInit","setPostsInit","posts","setPosts","setNextUrl","postsDidSet","setPostsDidSet","useEffect","final","newPosts","concat","next","results","handleDidRepost","newPost","updatePostsInit","unshift","updateFinalPosts","map","item","index","key","PostsList","PostComponent","setNewPosts","canPost","canpost","tempNewPosts","PostDetailComponent","didLookup","setDidLookup","setPost","handleBackendLookup","apiPostDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","postsEl","dataset","postsFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.04099584.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n    let jsonData;\n    if (data) {\n        jsonData = JSON.stringify(data)\n    }\n    const xhr = new XMLHttpRequest()\n    const url = `http://localhost:8000/api${endpoint}`\n    xhr.responseType = \"json\"\n    const csrftoken = getCookie('csrftoken');\n    xhr.open(method, url)\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n\n    if (csrftoken) {\n        //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\n    }\n\n    xhr.onload = function () {\n        if (xhr.status === 403) {\n            const detail = xhr.response.detail\n            if (detail === \"Authentication credentials were not provided.\") {\n                if (window.location.href.indexOf(\"login\") === -1) {\n                    window.location.href = \"/login?showLoginRequired=true\"\n                }\n            }\n        }\n        callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function (e) {\n        console.log(e)\n        callback({ \"message\": \"The request was an error\" }, 400)\n    }\n    xhr.send(jsonData)\n}","import { backendLookup } from '../lookup'\n\nexport function apiPostCreate(newPost, callback) {\n    backendLookup(\"POST\", \"/posts/create/\", callback, { content: newPost })\n}\n\nexport function apiPostAction(postId, action, callback) {\n    const data = { id: postId, action: action }\n    backendLookup(\"POST\", \"/posts/action/\", callback, data)\n}\n\nexport function apiPostDetail(postId, callback) {\n    backendLookup(\"GET\", `/posts/${postId}/`, callback)\n}\n\nexport function apiPostFeed(callback, nextUrl) {\n    let endpoint = \"/posts/feed/\"\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}\n\nexport function apiPostList(username, callback, nextUrl) {\n    let endpoint = \"/posts/\"\n    if (username) {\n        endpoint = `/posts/?username=${username}`\n    }\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n    backendLookup(\"GET\", endpoint, callback)\n}","import React from 'react'\n\nimport { apiPostAction } from './lookup'\n\nexport function ActionBtn(props) {\n    const { post, action, didPerformAction } = props\n    const likes = post.likes ? post.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-sm'\n    const actionDisplay = action.display ? action.display : 'Action'\n\n    const handleBackendActionEvent = (response, status) => {\n        console.log(response, status)\n        if ((status === 200 || status === 201) && didPerformAction) {\n            didPerformAction(response, status)\n        }\n    }\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiPostAction(post.id, action.type, handleBackendActionEvent)\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n}","import React from 'react'\n\n\n\nexport function UserLink(props) {\n    const { username } = props\n    const handleUserLink = (event) => {\n        window.location.href = `/profiles/${username}`\n    }\n    return <span className='pointer' onClick={handleUserLink}>\n        {props.children}\n    </span>\n}\n\n\nexport function UserDisplay(props) {\n    const { user, includeFullName } = props\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null\n    return <React.Fragment>\n        {nameDisplay}\n        <UserLink username={user.username}>@{user.username}</UserLink>\n    </React.Fragment>\n}\n\nexport function UserPicture(props) {\n    const { user } = props\n    return <UserLink username={user.username}><span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\n        {user.username[0]}\n    </span></UserLink>\n}","import React, { useState } from 'react'\n\nimport { ActionBtn } from './buttons'\nimport {\n    UserDisplay,\n    UserPicture\n} from '../profiles'\n\nexport function ParentPost(props) {\n    const { post } = props\n    return post.parent ? <Post isRepost reposter={props.reposter} hideActions className={' '} post={post.parent} /> : null\n}\n\nexport function Post(props) {\n    const { post, didRepost, hideActions, isRepost, reposter } = props\n    const [actionPost, setActionPost] = useState(props.post ? props.post : null)\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n    className = isRepost === true ? `${className} p-2 border rounded` : className\n    const path = window.location.pathname\n    const match = path.match(/(?<postid>\\d+)/)\n    const urlPostId = match ? match.groups.postid : -1\n    const isDetail = `${post.id}` === `${urlPostId}`\n\n    const handleLink = (event) => {\n        event.preventDefault()\n        window.location.href = `/${post.id}`\n    }\n\n    const handlePerformAction = (newActionPost, status) => {\n        if (status === 200) {\n            setActionPost(newActionPost)\n        } else if (status === 201) {\n            if (didRepost) {\n                didRepost(newActionPost)\n            }\n        }\n    }\n\n    return <div className={className}>\n        {isRepost === true && <div className='mb-2'>\n            <span className='small text-muted'>Repost via <UserDisplay user={reposter} /></span>\n        </div>}\n        <div className=\"d-flex\">\n            <div className=\"\">\n                <UserPicture user={post.user} />\n            </div>\n            <div className=\"col-11\">\n                <div>\n                    <p>\n                        <UserDisplay includeFullName user={post.user} />\n                    </p>\n                    <p>{post.content}</p>\n                    <ParentPost post={post} reposter={post.user} />\n                </div>\n                <div className='btn btn-group px-0'>\n                    {(actionPost && hideActions !== true) && <React.Fragment>\n                        <ActionBtn post={actionPost} didPerformAction={handlePerformAction} action={{ type: \"like\", display: \"Likes\" }} />\n                        <ActionBtn post={actionPost} didPerformAction={handlePerformAction} action={{ type: \"unlike\", display: \"Unlike\" }} />\n                        <ActionBtn post={actionPost} didPerformAction={handlePerformAction} action={{ type: \"repost\", display: \"Repost\" }} />\n                    </React.Fragment>\n                    }\n                    {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\n                </div>\n            </div>\n        </div>\n    </div>\n}","import React from 'react'\n\nimport { apiPostCreate } from './lookup'\n\nexport function PostCreate(props) {\n    const textAreaRef = React.createRef()\n    const { didPost } = props\n    const handleBackEndUpdate = (response, status) => {\n        if (status === 201) {\n            didPost(response)\n        } else {\n            console.log(response)\n            alert(\"An error occured please try again\")\n        }\n    }\n\n    const handleSubmit = (event) => {\n        //backend api request\n        event.preventDefault()\n        const newVal = textAreaRef.current.value\n        // change this to a server side call\n        apiPostCreate(newVal, handleBackEndUpdate)\n        textAreaRef.current.value = ''\n    }\n    return <div className={props.className}>\n        <form onSubmit={handleSubmit}>\n            <textarea ref={textAreaRef} required={true} className='form-control' name='post'>\n\n            </textarea>\n            <button type='subbmit' className='btn btn-primary my-3'>Speek</button>\n        </form>\n    </div>\n}\n","import React, { useEffect, useState } from 'react'\n\nimport { apiPostFeed } from './lookup'\nimport { Post } from './detail'\n\nexport function FeedList(props) {\n    const [postsInit, setPostsInit] = useState([])\n    const [posts, setPosts] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [postsDidSet, setPostsDidSet] = useState(false)\n    useEffect(() => {\n        const final = [...props.newPosts].concat(postsInit)\n        if (final.length !== posts.length) {\n            setPosts(final)\n        }\n    }, [props.newPosts, posts, postsInit])\n    useEffect(() => {\n        if (postsDidSet === false) {\n            const handlePostListLookUp = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    setPostsInit(response.results)\n                    setPostsDidSet(true)\n                } else {\n                    alert(\"There was an error\")\n                }\n            }\n            apiPostFeed(handlePostListLookUp)\n        }\n    }, [postsInit, postsDidSet, setPostsDidSet, props.username])\n\n    const handleDidRepost = (newPost) => {\n        const updatePostsInit = [...postsInit]\n        updatePostsInit.unshift(newPost)\n        setPostsInit(updatePostsInit)\n        const updateFinalPosts = [...posts]\n        updateFinalPosts.unshift(posts)\n        setPosts(updateFinalPosts)\n    }\n\n    const handleLoadNext = (event) => {\n        event.preventDefault()\n        if (nextUrl !== null) {\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    const newPosts = [...posts].concat(response.results)\n                    setPostsInit(newPosts)\n                    setPosts(newPosts)\n                }\n            }\n            apiPostFeed(handleLoadNextResponse, nextUrl)\n        }\n    }\n\n    return <React.Fragment>{posts.map((item, index) => {\n        return <Post\n            post={item}\n            didRepost={handleDidRepost}\n            className='my-5 py-5 border bg-white text-dark'\n            key={`${index}-{item.id}`} />\n    })}\n        {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment>\n}","import React, { useEffect, useState } from 'react'\n\nimport { apiPostList } from './lookup'\nimport { Post } from './detail'\n\nexport function PostsList(props) {\n    const [postsInit, setPostsInit] = useState([])\n    const [posts, setPosts] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [postsDidSet, setPostsDidSet] = useState(false)\n    useEffect(() => {\n        const final = [...props.newPosts].concat(postsInit)\n        if (final.length !== posts.length) {\n            setPosts(final)\n        }\n    }, [props.newPosts, posts, postsInit])\n    useEffect(() => {\n        if (postsDidSet === false) {\n            const handlePostListLookUp = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    setPostsInit(response.results)\n                    setPostsDidSet(true)\n                } else {\n                    alert(\"There was an error\")\n                }\n            }\n            apiPostList(props.username, handlePostListLookUp)\n        }\n    }, [postsInit, postsDidSet, setPostsDidSet, props.username])\n\n    const handleDidRepost = (newPost) => {\n        const updatePostsInit = [...postsInit]\n        updatePostsInit.unshift(newPost)\n        setPostsInit(updatePostsInit)\n        const updateFinalPosts = [...posts]\n        updateFinalPosts.unshift(posts)\n        setPosts(updateFinalPosts)\n    }\n\n    const handleLoadNext = (event) => {\n        event.preventDefault()\n        if (nextUrl !== null) {\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next)\n                    const newPosts = [...posts].concat(response.results)\n                    setPostsInit(newPosts)\n                    setPosts(newPosts)\n                } else {\n                    alert(\"There was an error\")\n                }\n            }\n            apiPostList(props.username, handleLoadNextResponse, nextUrl)\n        }\n    }\n\n    return <React.Fragment>{posts.map((item, index) => {\n        return <Post\n            post={item}\n            didRepost={handleDidRepost}\n            className='my-5 py-5 border bg-white text-dark'\n            key={`${index}-{item.id}`} />\n    })}\n        {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load next</button>}\n    </React.Fragment>\n}","import React, { useEffect, useState } from 'react'\n\nimport { PostCreate } from './create'\nimport { Post } from './detail'\nimport { apiPostDetail } from './lookup'\nimport { FeedList } from './feed'\nimport { PostsList } from './list'\n\nexport function FeedComponent(props) {\n    const [newPosts, setNewPosts] = useState([])\n    const canPost = props.canPost === \"false\" ? false : true\n    const handleNewPost = (newPost) => {\n        let tempNewPosts = [...newPosts]\n        tempNewPosts.unshift(newPost)\n        setNewPosts(tempNewPosts)\n    }\n    return <div className={props.className}>\n        {canPost === true && <PostCreate didPost={handleNewPost} className='col-12 mb-3' />}\n        <FeedList newPosts={newPosts} {...props} />\n    </div>\n}\n\n\nexport function PostComponent(props) {\n    const [newPosts, setNewPosts] = useState([])\n    const canPost = props.canpost === \"false\" ? false : true\n    const handleNewPost = (newPost) => {\n        let tempNewPosts = [...newPosts]\n        tempNewPosts.unshift(newPost)\n        setNewPosts(tempNewPosts)\n    }\n    return <div className={props.className}>\n        {canPost === true && <PostCreate didPost={handleNewPost} className='col-12 mb-3' />}\n        <PostsList newPosts={newPosts} {...props} />\n    </div>\n}\n\nexport function PostDetailComponent(props) {\n    const { postId } = props\n    const [didLookup, setDidLookup] = useState(false)\n    const [post, setPost] = useState(null)\n\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n            setPost(response)\n        } else {\n            alert(\"There was an error finding your post.\")\n        }\n    }\n    useEffect(() => {\n        if (didLookup === false) {\n\n            apiPostDetail(postId, handleBackendLookup)\n            setDidLookup(true)\n        }\n    }, [postId, didLookup, setDidLookup])\n\n    return post === null ? null : <Post post={post} className={props.className} />\n}\n\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { PostComponent } from './posts'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <PostComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { PostComponent, PostDetailComponent, FeedComponent } from './posts'\nimport * as serviceWorker from './serviceWorker';\n\nconst appEl = document.getElementById('root')\nif (appEl) {\n  ReactDOM.render(<App />, appEl);\n}\nconst e = React.createElement\nconst postsEl = document.getElementById(\"speek-app\")\nif (postsEl) {\n  ReactDOM.render(\n    e(PostComponent, postsEl.dataset), postsEl);\n}\n\nconst postsFeedEl = document.getElementById(\"speek-app-feed\")\nif (postsFeedEl) {\n  ReactDOM.render(\n    e(FeedComponent, postsFeedEl.dataset), postsFeedEl);\n}\n\nconst postDetailElements = document.querySelectorAll(\".speek-app-detail\")\n\npostDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(PostDetailComponent, container.dataset),\n    container);\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}